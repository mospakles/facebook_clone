{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparkles\\\\Documents\\\\My_Projects\\\\todo_list\\\\src\\\\game\\\\Puzzle\\\\components\\\\Game.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.setTileStyle = (val, index, nextVal) => {\n      let width = 100 / this.props.size - 1;\n      let textHeight = 'calc(40px + ' + 10 / this.props.size + 'vmin)';\n      return {\n        flexBasis: width + '%',\n        paddingTop: width / 8 + '%',\n        paddingBottom: width / 8 * 7 + '%',\n        lineHeight: textHeight,\n        fontSize: textHeight,\n        backgroundColor: val === index + 1 ? 'green' : val === nextVal ? 'red' : val === 0 ? '#6D28D9' : '#EAB308'\n      };\n    };\n    this.generateTiles = () => {\n      return this.props.board.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile\",\n          id: \"tile\" + val,\n          style: this.setTileStyle(val, index, this.findNextTile()),\n          onClick: this.props.move.bind(this, index),\n          children: val ? val : ''\n        }, val, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n  findNextTile() {\n    if (this.props.board.length) {\n      let board = this.props.board;\n      let nextVal = 1;\n      while (nextVal < board.length) {\n        if (board[nextVal - 1] !== nextVal) break;\n        nextVal++;\n      }\n      return nextVal;\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      ref: \"gameWindow\",\n      children: this.generateTiles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Game","setTileStyle","val","index","nextVal","width","props","size","textHeight","flexBasis","paddingTop","paddingBottom","lineHeight","fontSize","backgroundColor","generateTiles","board","map","findNextTile","move","bind","length","render"],"sources":["C:/Users/Sparkles/Documents/My_Projects/todo_list/src/game/Puzzle/components/Game.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Game extends Component {\r\n    findNextTile() {\r\n        if(this.props.board.length) {\r\n            let board = this.props.board;\r\n            let nextVal = 1;\r\n            while(nextVal<board.length) {\r\n                if(board[nextVal-1]!==nextVal) break;\r\n                nextVal++;\r\n            }\r\n            return nextVal;\r\n        }\r\n    }\r\n    setTileStyle = (val, index, nextVal) => {\r\n        let width = (100/this.props.size)-1;\r\n        let textHeight = 'calc(40px + '+10/this.props.size+'vmin)';\r\n        return({\r\n            flexBasis: width+'%',\r\n            paddingTop: (width/8)+'%',\r\n            paddingBottom: (width/8*7)+'%',\r\n            lineHeight: textHeight,\r\n            fontSize: textHeight,\r\n            backgroundColor: val === index+1 ?'green':(val===nextVal?'red':(val===0?'#6D28D9':'#EAB308'))\r\n        })\r\n    }\r\n    generateTiles = () => {\r\n        return (this.props.board.map( (val, index) => {\r\n            return(\r\n                <div className=\"tile\" id={\"tile\"+val} key={val} style={this.setTileStyle(val, index, this.findNextTile())} onClick={this.props.move.bind(this, index)}> \r\n                {val?val:''}\r\n                </div>\r\n            );\r\n        }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Game\" ref=\"gameWindow\">\r\n                {this.generateTiles()}\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA;AAExC,eAAe,MAAMC,IAAI,SAASD,SAAS,CAAC;EAAA;IAAA;IAAA,KAYxCE,YAAY,GAAG,CAACC,GAAG,EAAEC,KAAK,EAAEC,OAAO,KAAK;MACpC,IAAIC,KAAK,GAAI,GAAG,GAAC,IAAI,CAACC,KAAK,CAACC,IAAI,GAAE,CAAC;MACnC,IAAIC,UAAU,GAAG,cAAc,GAAC,EAAE,GAAC,IAAI,CAACF,KAAK,CAACC,IAAI,GAAC,OAAO;MAC1D,OAAO;QACHE,SAAS,EAAEJ,KAAK,GAAC,GAAG;QACpBK,UAAU,EAAGL,KAAK,GAAC,CAAC,GAAE,GAAG;QACzBM,aAAa,EAAGN,KAAK,GAAC,CAAC,GAAC,CAAC,GAAE,GAAG;QAC9BO,UAAU,EAAEJ,UAAU;QACtBK,QAAQ,EAAEL,UAAU;QACpBM,eAAe,EAAEZ,GAAG,KAAKC,KAAK,GAAC,CAAC,GAAE,OAAO,GAAED,GAAG,KAAGE,OAAO,GAAC,KAAK,GAAEF,GAAG,KAAG,CAAC,GAAC,SAAS,GAAC;MACtF,CAAC;IACL,CAAC;IAAA,KACDa,aAAa,GAAG,MAAM;MAClB,OAAQ,IAAI,CAACT,KAAK,CAACU,KAAK,CAACC,GAAG,CAAE,CAACf,GAAG,EAAEC,KAAK,KAAK;QAC1C,oBACI;UAAK,SAAS,EAAC,MAAM;UAAC,EAAE,EAAE,MAAM,GAACD,GAAI;UAAW,KAAK,EAAE,IAAI,CAACD,YAAY,CAACC,GAAG,EAAEC,KAAK,EAAE,IAAI,CAACe,YAAY,EAAE,CAAE;UAAC,OAAO,EAAE,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACC,IAAI,CAAC,IAAI,EAAEjB,KAAK,CAAE;UAAA,UACrJD,GAAG,GAACA,GAAG,GAAC;QAAE,GADgCA,GAAG;UAAA;UAAA;UAAA;QAAA,QAExC;MAEd,CAAC,CAAC;IACN,CAAC;EAAA;EA/BDgB,YAAY,GAAG;IACX,IAAG,IAAI,CAACZ,KAAK,CAACU,KAAK,CAACK,MAAM,EAAE;MACxB,IAAIL,KAAK,GAAG,IAAI,CAACV,KAAK,CAACU,KAAK;MAC5B,IAAIZ,OAAO,GAAG,CAAC;MACf,OAAMA,OAAO,GAACY,KAAK,CAACK,MAAM,EAAE;QACxB,IAAGL,KAAK,CAACZ,OAAO,GAAC,CAAC,CAAC,KAAGA,OAAO,EAAE;QAC/BA,OAAO,EAAE;MACb;MACA,OAAOA,OAAO;IAClB;EACJ;EAsBAkB,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,MAAM;MAAC,GAAG,EAAC,YAAY;MAAA,UACjC,IAAI,CAACP,aAAa;IAAE;MAAA;MAAA;MAAA;IAAA,QACnB;EAEd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}